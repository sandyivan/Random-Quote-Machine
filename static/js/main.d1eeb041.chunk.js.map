{"version":3,"sources":["WisdomBox.js","colors.js","App.js","reportWebVitals.js","index.js"],"names":["Wrapper","quote","author","generateRandomQuote","tweetLink","className","id","icon","faQuoteLeft","target","class","href","faTwitterSquare","onClick","colors","App","props","changeBg","state","color","Math","floor","random","length","document","body","style","backgroundColor","getElementById","console","log","randomIndx","quotes","text","setState","fetchData","fetch","then","response","json","results","this","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"yTAgCeA,EAvBC,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,oBAE1BC,EAAS,iEAA6DH,EAA7D,aAAuEC,GACpF,OACI,qBAAKG,UAAU,kBAAf,SACI,sBAAKC,GAAG,YAAR,UACI,6BAAYA,GAAG,OAAf,UACI,cAAC,IAAD,CAAiBD,UAAU,aAAaE,KAAMC,MAC9C,+BAAOP,OAEX,oBAAGK,GAAG,SAAN,eAAkBJ,KAClB,mBAAGI,GAAG,cAAcG,OAAO,SAAQC,MAAM,uBACzCC,KAAMP,EADN,SAEI,cAAC,IAAD,CAAiBG,KAAMK,IAAiBP,UAAU,YAEtD,wBAAQQ,QAASV,EAAqBG,GAAG,YAAYD,UAAU,wCAA/D,6BC0ECS,EAlGD,CACZ,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WCzBWC,E,kDA9Db,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAeRC,SAAW,WACT,IAAQH,EAAW,EAAKI,MAAhBJ,OACFK,EAAQL,EAAOM,KAAKC,MAAMD,KAAKE,SAAWR,EAAOS,SACvDC,SAASC,KAAKC,MAAMC,gBAAkBR,EACtCK,SAASI,eAAe,aAAaF,MAAMC,gBAAmBR,EAC9DK,SAASI,eAAe,eAAeF,MAAMP,MAAQA,EACrDK,SAASI,eAAe,QAAQF,MAAMP,MAAQA,EAC9CK,SAASI,eAAe,UAAUF,MAAMP,MAAQA,EAEhDU,QAAQC,IAAI,UAzBK,EA8BnB3B,oBAAsB,WACpB0B,QAAQC,IAAI,EAAKZ,MAAMjB,OACvB,IAAI8B,EAAc,EAAKb,MAAMc,OAAOZ,KAAKC,MAAMD,KAAKE,SAAW,EAAKJ,MAAMc,OAAOT,SACjFM,QAAQC,IAAIC,EAAWE,KAAMF,EAAW7B,QACxC,EAAKgC,SAAS,CACZjC,MAAO8B,EAAWE,KAClB/B,OAAQ6B,EAAW7B,SAErB,EAAKe,YAtCY,EAyCnBkB,UAAY,WAEVC,MAAM,+BACJC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAO,OAAI,EAAKN,SAAS,CAAEF,OAAQQ,QA3C1C,EAAKtB,MAAQ,CACXc,OAAQ,GACR/B,MAAO,gBACPC,OAAQ,eACRY,OAAQA,EACRK,MAAO,IAPQ,E,qDAYnB,WACEsB,KAAKN,c,oBAoCP,WAGE,OACE,qBAAK9B,UAAU,MAAf,SACE,cAAC,EAAD,CAAaF,oBAAqBsC,KAAKtC,oBAAqBF,MAAOwC,KAAKvB,MAAMjB,MAAOC,OAAQuC,KAAKvB,MAAMhB,e,GAvD9FwC,IAAMC,WCKTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF9B,SAASI,eAAe,SAM1BgB,M","file":"static/js/main.d1eeb041.chunk.js","sourcesContent":["import React from 'react';\r\nimport './WisdomBox.css';\r\n\r\n// font awesome library\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faQuoteLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faTwitterSquare } from \"@fortawesome/free-brands-svg-icons\"\r\n\r\n\r\nconst Wrapper = ({ quote, author, generateRandomQuote }) => {\r\n    \r\n    let tweetLink = `https://twitter.com/intent/tweet?hashtags=quotes&text=\"${quote}\" ${author}` ;\r\n    return (\r\n        <div className=\"quote-container\">\r\n            <div id=\"quote-box\">\r\n                <blockquote id=\"text\">\r\n                    <FontAwesomeIcon className=\"quote-left\" icon={faQuoteLeft} /> \r\n                    <span>{quote}</span>\r\n                </blockquote>   \r\n                <p id=\"author\">- {author}</p>\r\n                <a id=\"tweet-quote\" target=\"_blank\"class=\"twitter-share-button\"\r\n                href={tweetLink}>\r\n                    <FontAwesomeIcon icon={faTwitterSquare} className=\"fa-3x\" />\r\n                </a>\r\n                <button onClick={generateRandomQuote} id=\"new-quote\" className=\"shadow-none btn btn-default float-end\">click me </button>    \r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Wrapper;"," const colors = [\r\n    \"#00ffff\",\r\n    \"#000000\",\r\n    \"#0000ff\",\r\n    \"#8a2be2\",\r\n    \"#a52a2a\",\r\n    \"#deb887\",\r\n    \"#5f9ea0\",\r\n    \"#7fff00\",\r\n    \"#d2691e\",\r\n    \"#ff7f50\",\r\n    \"#6495ed\",\r\n    \"#dc143c\",\r\n    \"#00008b\",\r\n    \"#008b8b\",\r\n    \"#b8860b\",\r\n    \"#a9a9a9\",\r\n    \"#006400\",\r\n    \"#bdb76b\",\r\n    \"#8b008b\",\r\n    \"#556b2f\",\r\n    \"#ff8c00\",\r\n    \"#9932cc\",\r\n    \"#8b0000\",\r\n    \"#e9967a\",\r\n    \"#8fbc8f\",\r\n    \"#483d8b\",\r\n    \"#2f4f4f\",\r\n    \"#2f4f4f\",\r\n    \"#00ced1\",\r\n    \"#9400d3\",\r\n    \"#ff1493\",\r\n    \"#696969\",\r\n    \"#696969\",\r\n    \"#1e90ff\",\r\n    \"#b22222\",\r\n    \"#228b22\",\r\n    \"#ff00ff\",\r\n    \"#ffd700\",\r\n    \"#daa520\",\r\n    \"#808080\",\r\n    \"#008000\",\r\n    \"#808080\",\r\n    \"#ff69b4\",\r\n    \"#cd5c5c\",\r\n    \"#4b0082\",\r\n    \"#7cfc00\",\r\n    \"#f08080\",\r\n    \"#90ee90\",\r\n    \"#ffa07a\",\r\n    \"#20b2aa\",\r\n    \"#87cefa\",\r\n    \"#778899\",\r\n    \"#778899\",\r\n    \"#00ff00\",\r\n    \"#32cd32\",\r\n    \"#ff00ff\",\r\n    \"#800000\",\r\n    \"#66cdaa\",\r\n    \"#0000cd\",\r\n    \"#ba55d3\",\r\n    \"#9370db\",\r\n    \"#3cb371\",\r\n    \"#7b68ee\",\r\n    \"#00fa9a\",\r\n    \"#48d1cc\",\r\n    \"#c71585\",\r\n    \"#191970\",\r\n    \"#000080\",\r\n    \"#808000\",\r\n    \"#6b8e23\",\r\n    \"#ffa500\",\r\n    \"#ff4500\",\r\n    \"#da70d6\",\r\n    \"#db7093\",\r\n    \"#cd853f\",\r\n    \"#800080\",\r\n    \"#663399\",\r\n    \"#ff0000\",\r\n    \"#bc8f8f\",\r\n    \"#4169e1\",\r\n    \"#8b4513\",\r\n    \"#fa8072\",\r\n    \"#f4a460\",\r\n    \"#2e8b57\",\r\n    \"#a0522d\",\r\n    \"#6a5acd\",\r\n    \"#708090\",\r\n    \"#708090\",\r\n    \"#00ff7f\",\r\n    \"#4682b4\",\r\n    \"#d2b48c\",\r\n    \"#008080\",\r\n    \"#ff6347\",\r\n    \"#ee82ee\",\r\n    \"#9acd32\"\r\n  ]\r\n\r\n  export default colors;","import './App.css';\n\nimport WisdomBox from './WisdomBox'\nimport colors  from './colors'\n\nimport React from 'react';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quotes: [],\n      quote: 'You can do it',\n      author: 'Sandeep Ivan',\n      colors: colors,\n      color: ''\n      \n    }\n  }\n\n  componentDidMount() {\n    this.fetchData()\n  }\n  \n  changeBg = () => {\n    const { colors } = this.state;\n    const color = colors[Math.floor(Math.random() * colors.length)];\n    document.body.style.backgroundColor = color;\n    document.getElementById(\"new-quote\").style.backgroundColor  = color;\n    document.getElementById(\"tweet-quote\").style.color = color;\n    document.getElementById(\"text\").style.color = color;\n    document.getElementById(\"author\").style.color = color;\n\n    console.log(\"click\")\n  }\n\n  \n  \n  generateRandomQuote = () => {\n    console.log(this.state.quote)\n    let randomIndx  = this.state.quotes[Math.floor(Math.random() * this.state.quotes.length)];\n    console.log(randomIndx.text, randomIndx.author)\n    this.setState({\n      quote: randomIndx.text,\n      author: randomIndx.author\n    })\n    this.changeBg()\n  }\n\n  fetchData = () => {\n    \n    fetch('https://type.fit/api/quotes')\n     .then(response => response.json())\n     .then(results => this.setState({ quotes: results }))\n  }\n //.then(results => this.setState({ quote: results[0].text, author: results[0].author }))\n\n  render() {\n    \n    \n    return (\n      <div className=\"App\">\n        <WisdomBox   generateRandomQuote={this.generateRandomQuote} quote={this.state.quote} author={this.state.author}/>\n       \n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}